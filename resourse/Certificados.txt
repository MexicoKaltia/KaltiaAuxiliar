-- Certificados locales, 
----------------------------------------------------------------------------
instalar cerboot
	sudo wget https://dl.eff.org/certbot-auto
	chmod a+x certbot-auto
	./certbot-auto
Ahora nos avisa de que no ha podido configurarse automáticamente, pero que podemos obtener el certificado y configurarlo manualmente mediante el comando:
	./certbot-auto certonly

ubicarse en $home/CertificadosSSL/NUEVOSVERTIFICADOS/KaltiaCertificados
	certbot certonly --standalone -d www.kaltiacontrol.xyz www.kaltia.xyz kaltiacontrol.xyz kaltia.xyz
	certbot certonly --standalone -d www.kaltia-store.xyz 

Copiar los nuevos reemplazos y actualizar el $TOMCAT/conf/server.xml
	en la etiqueta de Connection 443
	
https://medium.com/@raupach/how-to-install-lets-encrypt-with-tomcat-3db8a469e3d2
https://luisperis.com/instalar-lets-encrypt-ubuntu/
https://www.jorgebastida.es/instala-un-certificado-lets-encrypt-en-tomcat/
https://www.youtube.com/watch?v=d-f-2pMOgOA
	 keytool -importkeystore  -deststorepass abcdef -destkeypass 123456 -destkeystore keystore.jks -srckeystore cert_and_key.p12 -srcstoretype PKCS12 -srcstorepass H00W6odR -alias tomcat
	 keytool -import -trustcacerts -alias root -file chain1.pem -keystore keystore.jks
	 /home/hgrc/CertificadosSSL/keystore.jks

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/www.kaltia.xyz/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/www.kaltia.xyz/privkey.pem
   Your cert will expire on 2019-09-15. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot-auto
   again. To non-interactively renew *all* of your certificates, run
   "certbot-auto renew"
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le

How To Secure Apache with Let's Encrypt on Ubuntu 14.04 
https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-14-04
https://certbot.eff.org/lets-encrypt/ubuntuxenial-apache


openssl pkcs12 -export -in cert.pem -inkey privkey.pem -out cert_and_key.p12 -name tomcat -CAfile chain.pem -caname root
Enter Export Password: abcdef
keytool -importkeystore  -deststorepass abcdef -destkeypass 123456 -destkeystore keystore.jks -srckeystore cert_and_key.p12 -srcstoretype PKCS12 -srcstorepass H00W6odR -alias tomcat

__________________________________________________________________________________________________
ssl con keytool
	
	whereis keytool
	/usr/bin/keytool /usr/share/man/man1/keytool.1.gz

	Creación del Keytool

1. Crear una nueva keystore:
Debemos abrir un terminal y navegar hsta el directorio donde deseamos tener el keystore. Debemos recordar el alias que utilizaremos, ya que lo necesitaremos más tarde.
	keytool -genkey -alias midominio -keyalg RSA -keystore KeyStore.jks -keysize 2048

2. Generar un CSR a partir de la keystore:
	keytool -certreq -alias midominio -keystore KeyStore.jks -file midominio.csr
	/usr/bin/keytool -certreq -alias wess -keystore KeyStore.jks -file wess.csr
	
	/usr/bin/keytool -import -trustcacerts -alias root -file root.crt -keystore KeyStore.jks
	/usr/bin/keytool -import -trustcacerts -alias wess -file wess.crt -keystore KeyStore.jks
	
	<SSLHostConfig>
            <Certificate certificateKeystoreFile="conf/KeyStore.jks"
                         type="RSA" />
        </SSLHostConfig>
